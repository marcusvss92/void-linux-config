# doas configuration for Void Linux pentesting setup
# Place in /etc/doas.conf

# ============= BASIC CONFIGURATION =============

# Allow wheel group with password
permit :wheel

# Optional: Allow wheel group with password persistence (5 minutes)
# permit persist :wheel

# ============= PENTESTING COMMANDS =============

# Network scanning tools (no password needed)
permit nopass :wheel as root cmd /usr/bin/nmap
permit nopass :wheel as root cmd /usr/bin/masscan
permit nopass :wheel as root cmd /usr/bin/zmap

# Network monitoring
permit nopass :wheel as root cmd /usr/bin/tcpdump
permit nopass :wheel as root cmd /usr/bin/tshark
permit nopass :wheel as root cmd /usr/bin/wireshark

# Wireless tools
permit nopass :wheel as root cmd /usr/bin/airmon-ng
permit nopass :wheel as root cmd /usr/bin/airodump-ng
permit nopass :wheel as root cmd /usr/bin/aireplay-ng
permit nopass :wheel as root cmd /usr/bin/aircrack-ng

# System monitoring
permit nopass :wheel as root cmd /usr/bin/netstat
permit nopass :wheel as root cmd /bin/ss
permit nopass :wheel as root cmd /usr/bin/lsof

# ============= SYSTEM ADMINISTRATION =============

# Mount/unmount operations
permit nopass :wheel as root cmd /bin/mount
permit nopass :wheel as root cmd /bin/umount

# System control
permit nopass :wheel as root cmd /usr/bin/systemctl args reboot
permit nopass :wheel as root cmd /usr/bin/systemctl args poweroff
permit nopass :wheel as root cmd /usr/bin/systemctl args suspend
permit nopass :wheel as root cmd /usr/bin/systemctl args hibernate

# Service management (specific services)
permit nopass :wheel as root cmd /usr/bin/sv args up NetworkManager
permit nopass :wheel as root cmd /usr/bin/sv args down NetworkManager
permit nopass :wheel as root cmd /usr/bin/sv args restart NetworkManager

# ============= PACKAGE MANAGEMENT =============

# Package operations (require password for security)
permit :wheel as root cmd /usr/bin/xbps-install
permit :wheel as root cmd /usr/bin/xbps-remove
permit :wheel as root cmd /usr/bin/xbps-query

# ============= CUSTOM SCRIPTS =============

# Allow custom pentesting scripts without password
permit nopass :wheel as root cmd /usr/local/bin/pentest-workspace-setup.sh
permit nopass :wheel as root cmd /usr/local/bin/update-efi-entry.sh
permit nopass :wheel as root cmd /usr/local/bin/get-resume-offset.sh
permit nopass :wheel as root cmd /usr/local/bin/monitor-nonfree-compliance.sh

# Metasploit database management
permit nopass :wheel as root cmd /opt/metasploit/msfdb

# ============= DEVELOPMENT TOOLS =============

# Docker operations
permit nopass :wheel as root cmd /usr/bin/docker args ps
permit nopass :wheel as root cmd /usr/bin/docker args images
permit nopass :wheel as root cmd /usr/bin/docker-compose

# ============= SECURITY RESTRICTIONS =============

# Explicitly deny dangerous commands
deny :wheel as root cmd /bin/rm args -rf /*
deny :wheel as root cmd /usr/bin/dd args if=* of=/dev/sd*
deny :wheel as root cmd /usr/bin/shred args *
deny :wheel as root cmd /bin/mkfs.*

# Deny access to sensitive files
deny :wheel as root cmd /bin/cat args /etc/shadow
deny :wheel as root cmd /bin/cat args /etc/gshadow

# ============= LOGGING =============

# Log all doas usage (uncomment if you want logging)
# permit persist :wheel log

# ============= EXAMPLES FOR CUSTOMIZATION =============

# Uncomment and modify as needed:

# Allow specific user without password for everything (DANGEROUS)
# permit nopass username as root

# Allow specific commands for specific users
# permit nopass username as root cmd /path/to/specific/command

# Allow running as different user
# permit :wheel as postgres cmd /usr/bin/createdb

# Time-limited permissions
# permit :wheel as root cmd /usr/bin/some-command env { timeout=3600 }

# ============= NOTES =============

# - Lines starting with # are comments
# - Order matters: first matching rule wins
# - Use 'doas -C /etc/doas.conf' to check syntax
# - Test configuration before logging out
# - 'permit persist' caches authentication for 5 minutes
# - 'permit nopass' allows command without password
# - Always test dangerous configurations in a VM first

# ============= USEFUL COMMANDS =============

# Check doas configuration:
# doas -C /etc/doas.conf

# Test a command:
# doas whoami

# List what you can do:
# This feature doesn't exist in doas (unlike sudo -l)
# Check this file instead

# Clear doas timestamp cache:
# Not applicable - doas doesn't cache by default
